#--------------------
# For resin RaspberryPi3
#FROM resin/raspberrypi3-python:3.6

# Based on resin/raspberrypi3-python:3.6 installed opencv
#FROM demosense/raspberrypi3-opencv

#FROM resin/raspberrypi3-python:3.5
#FROM resin/raspberrypi3-debian
#
FROM resin/rpi-raspbian:stretch
#--------------------


# generate /root/work directory
WORKDIR /root/work

# copy .bashrc from host to target /root directory
ADD .bashrc /root

# setup environment variables?
#ENV DISPLAY :0


#--------------------
RUN     apt-get update && \
        apt-get upgrade -y && \
	apt-get install -y build-essential cmake pkg-config
RUN	apt-get install -y vim

RUN	apt-get install -y libjpeg-dev libtiff5-dev libjasper-dev libpng12-dev
RUN	apt-get install -y libavcodec-dev libavformat-dev libswscale-dev libv4l-dev
RUN	apt-get install -y libxvidcore-dev libx264-dev
RUN	apt-get install -y libgtk2.0-dev

RUN	apt-get install -y python3-dev python3-pip python3-numpy swig
#RUN	apt-get install -y python3-setuptools
RUN	pip3 install setuptools==39.1.0
RUN	pip3 install --upgrade pip
RUN	pip3 install numpy

# OpenCv
RUN	apt-get install -y libhdf5-dev libhdf5-serial-dev
RUN	apt-get install -y libatlas-base-dev gfortran
RUN	apt-get install -y libharfbuzz0b libwebp6 libjasper1 libilmbase12 libopenexr22 libgstreamer1.0-0 
RUN	apt-get install -y libgtk-3-0 libqtgui4 libqt4-test
RUN	pip3 install opencv-python opencv-contrib-python opencv-contrib-python-headless

# tensorflow
#RUN	pip3 install --upgrade tensorflow
RUN	pip3 install https://github.com/lhelontra/tensorflow-on-arm/releases/download/v1.9.0/tensorflow-1.9.0-cp35-none-linux_armv7l.whl
##RUN	pip3 install https://github.com/lhelontra/tensorflow-on-arm/releases/download/v1.9.0/tensorflow-1.9.0-cp35-none-linux_aarch64.whl


# dlib
RUN	pip3 install dlib
RUN	pip3 install scipy
RUN	pip3 install matplotlib scikit-learn

# pyaudio
RUN	apt-get install -y libasound-dev portaudio19-dev libportaudio2 libportaudiocpp0
RUN	pip3 install pyaudio

# vlc
RUN	apt-get install -y vlc 
RUN	sed -i 's/geteuid/getppid/' /usr/bin/vlc

RUN	pip3 install Pillow

# google-cloud-speech
RUN	pip3 install lc pymongo pprint
RUN	pip3 install google-cloud-speech==0.35.0

RUN	pip3 install requests Flask 

RUN	apt-get install -y net-tools

        #pip3 install dlib numpy scipy matplotlib sckikit-image scikit-learn && \
	#pip3 install google-cloud-vision==0.30.1 && \
#tensorflow-1.11.0-cp35-none-linux_armv7l.whl

COPY	. /root/docker
WORKDIR	/root/docker

CMD /bin/bash

#RUN cd /root; git clone https://github.com/opencv/opencv; cd /root/opencv; mkdir build; cd build; cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local ..; make; make install
#-----------------

